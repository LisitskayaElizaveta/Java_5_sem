4) будет выведено:
a1==i1 true
b1==i1 true
a1==b1 false
a1.equals(i1) -> true
b1.equals(i1) -> true
a1.equals(b1) -> true
a2==i2 true
b2==i2 true
a2==b2 true
a2.equals(i2) -> true
b2.equals(i2) -> true
a2.equals(b2) -> true

Для значений от -128 до 127 Java использует кэшированные объекты Integer - для таких значений все ссылки, ссылающиеся на одинаковые значения будут указывать на один и тот же объект в памяти. А для других каждый раз при упаковке нового значения будет создаваться новый объект
Отличие метода equals() от оператора == в том, что оператор == сравнивает ссылки на объекты в памяти компьютера, а метод equals() — их содержимое, поэтому он в обоих случаях возвращает true.


Класс IntegerCache в Java используется для кэширования объектов типа Intege, чтобы оптимизировать память и улучшить производительность при работе с числами в диапазоне от -128 до 127. Это позволяет повторно использовать уже существующие экземпляры Intege, сокращая количество создаваемых объектов и повышая эффективность операций сравнения.
